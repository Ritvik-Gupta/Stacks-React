{"version":3,"sources":["services/Stack.js","services/logicFuncs.js","services/StyledComponents.js","components/App/styles.js","components/StacksMenu.js","components/VisualStack.js","components/StackCreate/StackCreate.present.js","components/StackCreate/index.js","components/StackOptions.js","components/MessagesStack/MessagesStack.present.js","components/MessagesStack/index.js","components/App/index.js","index.js"],"names":["Stack","size","this","stack","Array","fill","top","value","isFull","isEmpty","prevStack","newStack","validTypes","validityChecks","number","val","test","boolean","string","isValidPush","type","Object","entries","reduce","found","check","getType","head","body","error","getIcon","getColor","ScrollDiv","styled","props","outset","noScroll","padding","StyledButton","Button","Grid","GridItem","area","StacksMenu","stackCollection","handleStackChange","stackPos","dropdownOptions","map","index","icon","key","text","name","Header","Icon","Content","Subheader","Dropdown","placeholder","fluid","selection","options","onChange","_","VisualStack","currentStack","color","copy","filter","el","reverse","mappedStack","Segment","length","raised","inverted","secondary","textAlign","emptyStack","Message","header","content","toUpperCase","as","Transition","Group","animation","StackCreatePresentation","modalOpen","inputName","inputType","inputSize","onModalToggle","onNameChange","onTypeChange","onSizeChange","onStackSubmit","Fragment","labelPosition","onClick","Modal","dimmer","open","centered","Form","onSubmit","Input","label","circular","link","Select","negative","Or","positive","StackCreate","handleStackCreate","useState","setModalOpen","setInputName","setInputType","setInputSize","handleEvents","Number","StackOptions","inputDesign","handleStackPush","handleStackPop","pushInput","setPushInput","onInputChange","loading","widths","MessagesStackPresentation","messageStack","archiveStack","messageOpen","archiveOpen","onClose","onMessageOpen","onArchiveOpen","onMessageArchive","floated","basic","pointing","scrolling","Description","Actions","primary","MessageStack","collectedMessages","archivedMessages","handleMessageArchive","setMessageOpen","setArchiveOpen","renderMessages","msg","success","warning","App","setStackPos","useImmer","setCollectedMessages","setArchivedMessages","setStackCollection","useEffect","console","groupCollapsed","log","groupEnd","messages","some","draft","concat","create","push","pop","errors","toLowerCase","includes","Math","floor","ceil","isValidStackConfig","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.078810d1.chunk.js","sourcesContent":["class Stack {\r\n\tconstructor(size = 10) {\r\n\t\tthis.stack = new Array(size).fill(null);\r\n\t\tthis.size = size;\r\n\t\tthis.top = -1;\r\n\t}\r\n\r\n\tisFull() {\r\n\t\treturn this.top === this.size - 1;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this.top === -1;\r\n\t}\r\n\r\n\tpush(value) {\r\n\t\tif (!this.isFull()) {\r\n\t\t\tthis.stack[++this.top] = value;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpop() {\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tconst value = this.stack[this.top];\r\n\t\t\tthis.stack[this.top--] = null;\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic create(prevStack) {\r\n\t\tconst newStack = new Stack();\r\n\t\tnewStack.stack = prevStack.stack;\r\n\t\tnewStack.size = prevStack.size;\r\n\t\tnewStack.top = prevStack.top;\r\n\t\treturn newStack;\r\n\t}\r\n\r\n\tget copy() {\r\n\t\treturn [...this.stack];\r\n\t}\r\n}\r\n\r\nexport default Stack;\r\n","export const validTypes = ['number', 'string', 'boolean'];\r\n\r\nconst validityChecks = {\r\n\tnumber: val => /^(\\d)+(.(\\d)+)?$/i.test(val),\r\n\tboolean: val => val === 'true' || val === 'false',\r\n\tstring: val => typeof val === 'string' && val !== '',\r\n};\r\n\r\nexport const getType = val => {\r\n\treturn Object.entries(validityChecks).reduce((found, check) => {\r\n\t\tif (found === null && check[1](val) === true) return check[0];\r\n\t\treturn found;\r\n\t}, null);\r\n};\r\n\r\nexport const isValidPush = (val, type) => {\r\n\treturn type === getType(val)\r\n\t\t? []\r\n\t\t: [\r\n\t\t\t\t{\r\n\t\t\t\t\thead: `Invalid Input of Type < ${type} >`,\r\n\t\t\t\t\tbody: `Element to push should be a < ${type} >`,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t},\r\n\t\t  ];\r\n};\r\n\r\nexport const isValidStackConfig = (name, type, size) => {\r\n\tconst errors = [];\r\n\tif (name.length <= 0 || name.length > 20 || name.toLowerCase() === 'default') {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invalid Name for a Stack',\r\n\t\t\tbody: 'Enter a Valid Name that is not \"Default\" or \"\"',\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (!validTypes.includes(type)) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invlid Type for a Stack',\r\n\t\t\tbody: 'A Stack can only have a Type of Number, String or Boolean',\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (size <= 0 || size > 20 || Math.floor(size) !== Math.ceil(size)) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invlid Size for a Stack',\r\n\t\t\tbody: 'Size of Stack cannot Exceed 20 and cannot be a Floating Number',\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\treturn errors;\r\n};\r\n\r\nexport const getIcon = type => {\r\n\tswitch (type) {\r\n\t\tcase 'number':\r\n\t\t\treturn 'sort numeric up';\r\n\t\tcase 'string':\r\n\t\t\treturn 'sort alphabet up';\r\n\t\tcase 'boolean':\r\n\t\t\treturn 'sort';\r\n\t\tdefault:\r\n\t\t\treturn 'delete';\r\n\t}\r\n};\r\n\r\nexport const getColor = type => {\r\n\tswitch (type) {\r\n\t\tcase 'number':\r\n\t\t\treturn 'orange';\r\n\t\tcase 'string':\r\n\t\t\treturn 'green';\r\n\t\tcase 'boolean':\r\n\t\t\treturn 'blue';\r\n\t\tdefault:\r\n\t\t\treturn 'red';\r\n\t}\r\n};\r\n","import styled from 'styled-components';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nexport const background = `#c1b8c1`;\r\nexport const backgroundHover = `#c6bec7`;\r\n\r\nexport const outsetShadow = `13px 13px 35px #9c959c, -13px -13px 35px #e6dbe6`;\r\nexport const insetShadow = `inset 13px 13px 35px #9c959c, inset -13px -13px 35px #e6dbe6`;\r\n\r\nexport const outsetShadowIntense = `5px 5px 21px #615c61, -5px -5px 21px #ffffff`;\r\nexport const insetShadowIntense = `inset 5px 5px 21px #615c61, inset -5px -5px 21px #ffffff`;\r\n\r\nexport const ScrollDiv = styled('div')`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\r\n\tbackground: ${background};\r\n\tbox-shadow: ${props => (props.outset ? outsetShadow : insetShadow)};\r\n\r\n\toverflow-y: ${props => (props.noScroll ? 'visible' : 'scroll')};\r\n\tpadding: ${props => (props.padding ? props.padding * 100 : 3)}%;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n\tcolor: black !important;\r\n\tbackground: ${background} !important;\r\n\tbox-shadow: ${outsetShadowIntense} !important;\r\n\tmargin-top: 1% !important;\r\n\r\n\t&:hover {\r\n\t\tbackground: ${backgroundHover} !important;\r\n\t}\r\n\r\n\t&:active {\r\n\t\tbox-shadow: ${insetShadowIntense} !important;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { background } from '../../services/StyledComponents';\r\n\r\nexport const Grid = styled('div')`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${background};\r\n\tpadding: 1%;\r\n\tdisplay: grid;\r\n\tgrid-template-rows: repeat(10, 1fr);\r\n\tgrid-template-columns: repeat(10, 1fr);\r\n\tgrid-gap: 1.5%;\r\n\tgrid-template-areas:\r\n\t\t'a a a a a d d d d d'\r\n\t\t'a a a a a d d d d d'\r\n\t\t'1 1 1 1 1 1 c c c c'\r\n\t\t'b b b b b b c c c c'\r\n\t\t'b b b b b b c c c c'\r\n\t\t'b b b b b b c c c c'\r\n\t\t'2 2 2 2 2 2 c c c c'\r\n\t\t'e e e e e e c c c c'\r\n\t\t'e e e e e e c c c c'\r\n\t\t'3 3 3 3 3 3 3 3 3 3';\r\n\r\n\t@media (max-width: 800px) {\r\n\t\theight: 250%;\r\n\t\tbackground-size: 100% 250%;\r\n\t\tpadding: 0%;\r\n\t\tgrid-template-rows: repeat(14, 1fr);\r\n\t\tgrid-template-columns: repeat(1, 1fr);\r\n\t\tgrid-gap: 0%;\r\n\t\tgrid-template-areas:\r\n\t\t\t'a'\r\n\t\t\t'1'\r\n\t\t\t'c'\r\n\t\t\t'c'\r\n\t\t\t'c'\r\n\t\t\t'c'\r\n\t\t\t'2'\r\n\t\t\t'd'\r\n\t\t\t'3'\r\n\t\t\t'b'\r\n\t\t\t'b'\r\n\t\t\t'4'\r\n\t\t\t'e'\r\n\t\t\t'5';\r\n\t}\r\n`;\r\nexport const GridItem = styled('div')`\r\n\tgrid-area: ${({ area }) => area};\r\n`;\r\n","import React from 'react';\r\nimport { Dropdown, Header, Icon } from 'semantic-ui-react';\r\n\r\nimport { getIcon } from '../services/logicFuncs';\r\nimport { ScrollDiv } from '../services/StyledComponents';\r\n\r\nconst StacksMenu = ({ stackCollection, handleStackChange, stackPos }) => {\r\n\tconst dropdownOptions = stackCollection.map((stack, index) => {\r\n\t\tconst icon = getIcon(stack.type);\r\n\r\n\t\treturn {\r\n\t\t\tkey: index,\r\n\t\t\tvalue: index,\r\n\t\t\ttext: `${stack.name} < ${stack.type} >`,\r\n\t\t\ticon: icon,\r\n\t\t};\r\n\t});\r\n\r\n\tconst onStackChange = (_, { value }) => {\r\n\t\thandleStackChange(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ScrollDiv noScroll outset>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='outdent' />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tChoose a Stack\r\n\t\t\t\t\t<Header.Subheader>Choose one out of the following Stacks</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<Dropdown\r\n\t\t\t\tvalue={stackPos}\r\n\t\t\t\tplaceholder='Select a Stack'\r\n\t\t\t\tfluid\r\n\t\t\t\tselection\r\n\t\t\t\toptions={dropdownOptions}\r\n\t\t\t\tonChange={onStackChange}\r\n\t\t\t/>\r\n\t\t</ScrollDiv>\r\n\t);\r\n};\r\n\r\nexport default StacksMenu;\r\n","import React from 'react';\r\nimport { Segment, Message, Header, Icon, Transition } from 'semantic-ui-react';\r\n\r\nimport { getIcon, getColor } from '../services/logicFuncs';\r\nimport { ScrollDiv } from '../services/StyledComponents';\r\n\r\nconst VisualStack = ({ currentStack }) => {\r\n\tconst icon = getIcon(currentStack.type);\r\n\tconst color = getColor(currentStack.type);\r\n\r\n\tconst stack = currentStack.stack.copy.filter(el => el !== null).reverse();\r\n\tconst mappedStack = stack.map((el, index) => {\r\n\t\treturn (\r\n\t\t\t<Segment\r\n\t\t\t\tkey={stack.length - index}\r\n\t\t\t\traised\r\n\t\t\t\tinverted\r\n\t\t\t\tsecondary\r\n\t\t\t\tcolor={color}\r\n\t\t\t\ttextAlign='center'\r\n\t\t\t>\r\n\t\t\t\t{el ? el : 'null'}\r\n\t\t\t</Segment>\r\n\t\t);\r\n\t});\r\n\tconst emptyStack = (\r\n\t\t<Message\r\n\t\t\terror\r\n\t\t\tsize='small'\r\n\t\t\ticon='crosshairs'\r\n\t\t\theader='Empty Stack'\r\n\t\t\tcontent={`${currentStack.name.toUpperCase()} Stack is empty .`}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ScrollDiv>\r\n\t\t\t<Header as='h2' color={color}>\r\n\t\t\t\t<Icon name={icon} />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\t{currentStack.name.toUpperCase()} Stack\r\n\t\t\t\t\t<Header.Subheader>Type : {currentStack.type}</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<Transition.Group animation='scale'>\r\n\t\t\t\t{stack.length > 0 ? mappedStack : emptyStack}\r\n\t\t\t</Transition.Group>\r\n\t\t</ScrollDiv>\r\n\t);\r\n};\r\n\r\nexport default VisualStack;\r\n","import React from 'react';\r\nimport { Icon, Button, Form, Modal, Header } from 'semantic-ui-react';\r\n\r\nimport { StyledButton, ScrollDiv } from '../../services/StyledComponents';\r\n\r\nconst StackCreatePresentation = ({\r\n\tmodalOpen,\r\n\tinputName,\r\n\tinputType,\r\n\tinputSize,\r\n\ticon,\r\n\tcolor,\r\n\toptions,\r\n\tonModalToggle,\r\n\tonNameChange,\r\n\tonTypeChange,\r\n\tonSizeChange,\r\n\tonStackSubmit,\r\n}) => (\r\n\t<React.Fragment>\r\n\t\t<ScrollDiv noScroll>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='paper plane' />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tCreate a New Stack\r\n\t\t\t\t\t<Header.Subheader>Initialise an Empty Stack with a Name</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<StyledButton icon fluid labelPosition='right' onClick={onModalToggle}>\r\n\t\t\t\t<Icon name='upload' />\r\n\t\t\t\tCreate an Empty Stack\r\n\t\t\t</StyledButton>\r\n\t\t</ScrollDiv>\r\n\t\t<Modal dimmer='blurring' open={modalOpen} centered={false}>\r\n\t\t\t<Modal.Header>Stack Creation Form</Modal.Header>\r\n\t\t\t<Modal.Content>\r\n\t\t\t\t<Form onSubmit={onStackSubmit}>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={inputName}\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tlabel='Stack Name'\r\n\t\t\t\t\t\tplaceholder='Enter a Stack Name ...'\r\n\t\t\t\t\t\ticon={<Icon name={icon} color={color} inverted circular link />}\r\n\t\t\t\t\t\tonChange={onNameChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={inputSize}\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tlabel='Stack Size'\r\n\t\t\t\t\t\tplaceholder='Enter the Size of Stack ...'\r\n\t\t\t\t\t\tonChange={onSizeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Select value={inputType} options={options} onChange={onTypeChange} />\r\n\t\t\t\t\t<Button.Group fluid>\r\n\t\t\t\t\t\t<Button type='button' negative onClick={onModalToggle}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button.Or />\r\n\t\t\t\t\t\t<Button type='submit' positive>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Button.Group>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Content>\r\n\t\t</Modal>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default StackCreatePresentation;\r\n","import React, { useState } from 'react';\r\n\r\nimport { getIcon, getColor, validTypes } from '../../services/logicFuncs';\r\n\r\nimport StackCreatePresentation from './StackCreate.present';\r\n\r\nconst StackCreate = ({ handleStackCreate }) => {\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [inputName, setInputName] = useState('');\r\n\tconst [inputType, setInputType] = useState(0);\r\n\tconst [inputSize, setInputSize] = useState(5);\r\n\r\n\tconst icon = getIcon(validTypes[inputType]);\r\n\tconst color = getColor(validTypes[inputType]);\r\n\tconst options = validTypes.map((type, index) => ({\r\n\t\tkey: index,\r\n\t\tvalue: index,\r\n\t\ttext: type.toUpperCase(),\r\n\t}));\r\n\r\n\tconst handleEvents = {\r\n\t\tonModalToggle: () => {\r\n\t\t\tsetModalOpen(!modalOpen);\r\n\t\t},\r\n\r\n\t\tonNameChange: (_, { value }) => {\r\n\t\t\tsetInputName(value);\r\n\t\t},\r\n\r\n\t\tonTypeChange: (_, { value }) => {\r\n\t\t\tsetInputType(value);\r\n\t\t},\r\n\r\n\t\tonSizeChange: (_, { value }) => {\r\n\t\t\tsetInputSize(Number(value));\r\n\t\t},\r\n\r\n\t\tonStackSubmit: () => {\r\n\t\t\thandleStackCreate(inputName, validTypes[inputType], inputSize);\r\n\t\t\tsetModalOpen(false);\r\n\t\t\tsetInputName('');\r\n\t\t\tsetInputType(0);\r\n\t\t\tsetInputSize(5);\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StackCreatePresentation\r\n\t\t\tmodalOpen={modalOpen}\r\n\t\t\tinputName={inputName}\r\n\t\t\tinputType={inputType}\r\n\t\t\tinputSize={inputSize}\r\n\t\t\ticon={icon}\r\n\t\t\tcolor={color}\r\n\t\t\toptions={options}\r\n\t\t\t{...handleEvents}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default StackCreate;\r\n","import React, { useState } from 'react';\r\nimport { Form, Icon, Header } from 'semantic-ui-react';\r\n\r\nimport { StyledButton, ScrollDiv } from '../services/StyledComponents';\r\n\r\nconst StackOptions = ({ currentStack, handleStackPush, handleStackPop }) => {\r\n\tconst [pushInput, setPushInput] = useState('');\r\n\r\n\tconst onInputChange = (_, { value }) => {\r\n\t\tsetPushInput(value);\r\n\t};\r\n\r\n\tconst onStackPush = () => {\r\n\t\thandleStackPush(pushInput);\r\n\t\tsetPushInput('');\r\n\t};\r\n\r\n\tconst onStackPop = () => {\r\n\t\thandleStackPop();\r\n\t\tsetPushInput('');\r\n\t};\r\n\r\n\tlet inputDesign;\r\n\tif (currentStack.type === 'boolean')\r\n\t\tinputDesign = (\r\n\t\t\t<Form.Select\r\n\t\t\t\tfluid\r\n\t\t\t\tvalue={pushInput}\r\n\t\t\t\tplaceholder='Choosea Boolean Value'\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ key: 0, text: 'TRUE', value: 'true' },\r\n\t\t\t\t\t{ key: 1, text: 'FALSE', value: 'false' },\r\n\t\t\t\t]}\r\n\t\t\t\tonChange={onInputChange}\r\n\t\t\t/>\r\n\t\t);\r\n\telse {\r\n\t\tinputDesign = (\r\n\t\t\t<Form.Input\r\n\t\t\t\tfluid\r\n\t\t\t\tvalue={pushInput}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Enter an element ...'\r\n\t\t\t\tonChange={onInputChange}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ScrollDiv noScroll outset>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='cog' loading />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tStack Operations\r\n\t\t\t\t\t<Header.Subheader>\r\n\t\t\t\t\t\tApply Push or Pop Operations on the Current Stack\r\n\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<Form>\r\n\t\t\t\t<Form.Group widths='equal'>{inputDesign}</Form.Group>\r\n\t\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\tlabelPosition='right'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={onStackPop}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Icon name='angle double down' />\r\n\t\t\t\t\t\tPop\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\tlabelPosition='right'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={onStackPush}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Icon name='angle double up' />\r\n\t\t\t\t\t\tPush\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</ScrollDiv>\r\n\t);\r\n};\r\n\r\nexport default StackOptions;\r\n","import React from 'react';\r\nimport { Header, Modal, Button, Icon } from 'semantic-ui-react';\r\n\r\nimport { StyledButton, ScrollDiv } from '../../services/StyledComponents';\r\n\r\nconst MessagesStackPresentation = ({\r\n\tmessageStack,\r\n\tarchiveStack,\r\n\temptyStack,\r\n\tmessageOpen,\r\n\tarchiveOpen,\r\n\tonClose,\r\n\tonMessageOpen,\r\n\tonArchiveOpen,\r\n\tonMessageArchive,\r\n}) => (\r\n\t<React.Fragment>\r\n\t\t<ScrollDiv noScroll outset>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='settings' />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tMessages\r\n\t\t\t\t\t<Header.Subheader>Checkout Messages collected</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<StyledButton\r\n\t\t\t\tfloated='right'\r\n\t\t\t\ticon='fork'\r\n\t\t\t\tcontent='Current Messages'\r\n\t\t\t\tlabel={{\r\n\t\t\t\t\tbasic: false,\r\n\t\t\t\t\tcolor: 'grey',\r\n\t\t\t\t\tpointing: 'left',\r\n\t\t\t\t\tcontent: messageStack.length,\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onMessageOpen}\r\n\t\t\t/>\r\n\t\t</ScrollDiv>\r\n\r\n\t\t<Modal open={messageOpen} centered={false}>\r\n\t\t\t<Modal.Header>Current Messages Collected</Modal.Header>\r\n\t\t\t<Modal.Content scrolling>\r\n\t\t\t\t<Modal.Description>\r\n\t\t\t\t\t<Header floated='right' size='small'>\r\n\t\t\t\t\t\tCheck out all the Current Messages\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t{messageStack.length > 0 ? messageStack : emptyStack}\r\n\t\t\t\t</Modal.Description>\r\n\t\t\t</Modal.Content>\r\n\t\t\t<Modal.Actions>\r\n\t\t\t\t<Button icon primary labelPosition='right' onClick={onMessageArchive}>\r\n\t\t\t\t\t<Icon name='chevron right' />\r\n\t\t\t\t\tArchive all the messages\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button icon positive labelPosition='right' onClick={onArchiveOpen}>\r\n\t\t\t\t\t<Icon name='inbox' />\r\n\t\t\t\t\tOpen Archived Messages\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button icon negative labelPosition='right' onClick={onClose}>\r\n\t\t\t\t\t<Icon name='close' />\r\n\t\t\t\t\tClose Messages\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Actions>\r\n\t\t</Modal>\r\n\r\n\t\t<Modal open={archiveOpen} centered={false}>\r\n\t\t\t<Modal.Header>Current Messages Archived</Modal.Header>\r\n\t\t\t<Modal.Content scrolling>\r\n\t\t\t\t<Modal.Description>\r\n\t\t\t\t\t<Header floated='right' size='small'>\r\n\t\t\t\t\t\tCheck out all the Archived Messages\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t{archiveStack.length > 0 ? archiveStack : emptyStack}\r\n\t\t\t\t</Modal.Description>\r\n\t\t\t</Modal.Content>\r\n\t\t\t<Modal.Actions>\r\n\t\t\t\t<Button icon negative labelPosition='right' onClick={onClose}>\r\n\t\t\t\t\t<Icon name='close' />\r\n\t\t\t\t\tClose Messages\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Actions>\r\n\t\t</Modal>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default MessagesStackPresentation;\r\n","import React, { useState } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nimport MessagesStackPresentation from './MessagesStack.present';\r\n\r\nconst MessageStack = ({\r\n\tcollectedMessages,\r\n\tarchivedMessages,\r\n\thandleMessageArchive,\r\n}) => {\r\n\tconst [messageOpen, setMessageOpen] = useState(false);\r\n\tconst [archiveOpen, setArchiveOpen] = useState(false);\r\n\r\n\tconst onClose = () => {\r\n\t\tsetMessageOpen(false);\r\n\t\tsetArchiveOpen(false);\r\n\t};\r\n\r\n\tconst onMessageOpen = () => {\r\n\t\tsetMessageOpen(true);\r\n\t\tsetArchiveOpen(false);\r\n\t};\r\n\r\n\tconst onArchiveOpen = () => {\r\n\t\tsetMessageOpen(false);\r\n\t\tsetArchiveOpen(true);\r\n\t};\r\n\r\n\tconst onMessageArchive = () => {\r\n\t\thandleMessageArchive();\r\n\t};\r\n\r\n\tconst renderMessages = stack =>\r\n\t\tstack.map((msg, index) => (\r\n\t\t\t<Message\r\n\t\t\t\tkey={index}\r\n\t\t\t\terror={msg.error === true}\r\n\t\t\t\tsuccess={msg.error !== true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\ticon={msg.error === true ? 'question' : 'star'}\r\n\t\t\t\theader={msg.head}\r\n\t\t\t\tcontent={msg.body}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\tconst messageStack = renderMessages(collectedMessages);\r\n\tconst archiveStack = renderMessages(archivedMessages);\r\n\tconst emptyStack = (\r\n\t\t<Message\r\n\t\t\twarning\r\n\t\t\ticon='inbox'\r\n\t\t\tsize='small'\r\n\t\t\theader='No Messages Found'\r\n\t\t\tcontent='No new Messages are found'\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<MessagesStackPresentation\r\n\t\t\tmessageStack={messageStack}\r\n\t\t\tarchiveStack={archiveStack}\r\n\t\t\temptyStack={emptyStack}\r\n\t\t\tmessageOpen={messageOpen}\r\n\t\t\tarchiveOpen={archiveOpen}\r\n\t\t\tonClose={onClose}\r\n\t\t\tonMessageOpen={onMessageOpen}\r\n\t\t\tonArchiveOpen={onArchiveOpen}\r\n\t\t\tonMessageArchive={onMessageArchive}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default MessageStack;\r\n","import React, { useState, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\n\nimport Stack from '../../services/Stack';\nimport { isValidStackConfig, isValidPush } from '../../services/logicFuncs';\n\nimport { Grid, GridItem } from './styles';\nimport StackMenu from '../StacksMenu';\nimport VisualStack from '../VisualStack';\nimport StackCreate from '../StackCreate';\nimport StackOptions from '../StackOptions';\nimport MessageStack from '../MessagesStack';\n\nconst App = () => {\n\tconst [stackPos, setStackPos] = useState(0);\n\n\tconst [collectedMessages, setCollectedMessages] = useImmer([]);\n\tconst [archivedMessages, setArchivedMessages] = useImmer([]);\n\tconst [stackCollection, setStackCollection] = useImmer([\n\t\t{\n\t\t\tname: 'Default',\n\t\t\ttype: 'number',\n\t\t\tstack: new Stack(),\n\t\t},\n\t\t{\n\t\t\tname: 'Default',\n\t\t\ttype: 'string',\n\t\t\tstack: new Stack(),\n\t\t},\n\t\t{\n\t\t\tname: 'Default',\n\t\t\ttype: 'boolean',\n\t\t\tstack: new Stack(),\n\t\t},\n\t]);\n\n\tuseEffect(() => {\n\t\tconsole.groupCollapsed('Current Stack Config ...');\n\t\tconsole.log('Current Position :\\t', stackPos);\n\t\tconsole.log(stackCollection[stackPos]);\n\t\tconsole.groupEnd();\n\t}, [stackCollection, stackPos]);\n\n\tuseEffect(() => {\n\t\tconsole.groupCollapsed('Current Messages ...');\n\t\tconsole.log(collectedMessages);\n\t\tconsole.log(archivedMessages);\n\t\tconsole.groupEnd();\n\t}, [collectedMessages, archivedMessages]);\n\n\tconst handleStackChange = index => {\n\t\tsetStackPos(index);\n\t};\n\n\tconst handleStackCreate = (name, type, size) => {\n\t\tconst messages = isValidStackConfig(name, type, size);\n\t\tif (messages.some(msg => msg.error === true)) {\n\t\t\tsetCollectedMessages(draft => draft.concat(messages));\n\t\t} else {\n\t\t\tsetStackCollection(draft => {\n\t\t\t\tdraft.push({\n\t\t\t\t\tname,\n\t\t\t\t\ttype,\n\t\t\t\t\tstack: new Stack(size),\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetCollectedMessages(draft => {\n\t\t\t\tdraft.push({\n\t\t\t\t\thead: 'Stack Created Successfully',\n\t\t\t\t\tbody: `Created Stack ${name.toUpperCase()} of Type < ${type} >`,\n\t\t\t\t\terror: false,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleStackPush = value => {\n\t\tconst messages = isValidPush(value, stackCollection[stackPos].type);\n\t\tif (messages.some(msg => msg.error === true)) {\n\t\t\tsetCollectedMessages(draft => draft.concat(messages));\n\t\t} else {\n\t\t\tconst newStack = Stack.create(stackCollection[stackPos].stack);\n\t\t\tif (newStack.push(value) === false) {\n\t\t\t\tsetCollectedMessages(draft => {\n\t\t\t\t\tdraft.push({\n\t\t\t\t\t\thead: 'Stack is Full',\n\t\t\t\t\t\tbody: 'Cannot Push any more elements.',\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetStackCollection(draft => {\n\t\t\t\t\tdraft[stackPos].stack = newStack;\n\t\t\t\t});\n\t\t\t\tsetCollectedMessages(draft => {\n\t\t\t\t\tdraft.push({\n\t\t\t\t\t\thead: 'Element Pushed Successfully',\n\t\t\t\t\t\tbody: `Pushed element : ${value}`,\n\t\t\t\t\t\terror: false,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleStackPop = () => {\n\t\tconst newStack = Stack.create(stackCollection[stackPos].stack);\n\t\tconst value = newStack.pop();\n\t\tif (value === null) {\n\t\t\tsetCollectedMessages(draft => {\n\t\t\t\tdraft.push({\n\t\t\t\t\thead: 'Stack is Empty',\n\t\t\t\t\tbody: 'Cannot Pop any more elements.',\n\t\t\t\t\terror: true,\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tsetStackCollection(draft => {\n\t\t\t\tdraft[stackPos].stack = newStack;\n\t\t\t});\n\t\t\tsetCollectedMessages(draft => {\n\t\t\t\tdraft.push({\n\t\t\t\t\thead: 'Element Popped Successfully',\n\t\t\t\t\tbody: `Popped element : ${value}`,\n\t\t\t\t\terror: false,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleMessageArchive = () => {\n\t\tsetArchivedMessages(draft => draft.concat(collectedMessages));\n\t\tsetCollectedMessages(() => []);\n\t};\n\n\treturn (\n\t\t<Grid>\n\t\t\t<GridItem area='a'>\n\t\t\t\t<StackMenu\n\t\t\t\t\tstackPos={stackPos}\n\t\t\t\t\tstackCollection={stackCollection}\n\t\t\t\t\thandleStackChange={handleStackChange}\n\t\t\t\t/>\n\t\t\t</GridItem>\n\t\t\t<GridItem area='b'>\n\t\t\t\t<StackOptions\n\t\t\t\t\tcurrentStack={stackCollection[stackPos]}\n\t\t\t\t\thandleStackPush={handleStackPush}\n\t\t\t\t\thandleStackPop={handleStackPop}\n\t\t\t\t/>\n\t\t\t</GridItem>\n\t\t\t<GridItem area='c'>\n\t\t\t\t<VisualStack currentStack={stackCollection[stackPos]} />\n\t\t\t</GridItem>\n\t\t\t<GridItem area='d'>\n\t\t\t\t<StackCreate handleStackCreate={handleStackCreate} />\n\t\t\t</GridItem>\n\t\t\t<GridItem area='e'>\n\t\t\t\t<MessageStack\n\t\t\t\t\tcollectedMessages={collectedMessages}\n\t\t\t\t\tarchivedMessages={archivedMessages}\n\t\t\t\t\thandleMessageArchive={handleMessageArchive}\n\t\t\t\t/>\n\t\t\t</GridItem>\n\t\t</Grid>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './components/App';\n\nconst GlobalStyle = createGlobalStyle`\n   * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      width: 100vw;\n      height: 100vh;\n   }\n\n   #root {\n      width: 100%;\n      height: 100%;\n   }\n`;\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.Fragment>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}