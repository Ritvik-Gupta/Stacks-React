{"version":3,"sources":["services/Stack.js","services/stackServices/stackConsts.js","services/stackServices/stackValidation.js","services/stackServices/index.js","services/StyledComponents.js","components/App/styles.js","components/StacksMenu.js","components/VisualStack.js","components/StackCreate/StackCreate.present.js","components/StackCreate/index.js","components/StackOptions.js","components/MessagesStack/MessagesStack.present.js","components/MessagesStack/index.js","components/App/index.js","index.js"],"names":["Stack","size","this","stack","Array","fill","top","value","isFull","isEmpty","prevStack","newStack","initialStateStacks","name","type","validityChecks","Map","val","test","validTypes","keys","invalidStackNames","getType","check","isValidPush","head","body","error","isValidStackConfig","errors","length","push","includes","toLowerCase","toString","Math","floor","ceil","getIcon","getColor","ScrollDiv","styled","props","outset","noScroll","padding","StyledButton","Button","Grid","GridItem","area","StacksMenu","stackCollection","handleStackChange","stackPos","dropdownOptions","map","index","icon","key","text","Header","Icon","Content","Subheader","Dropdown","placeholder","fluid","selection","options","onChange","_","VisualStack","currentStack","color","copy","filter","el","reverse","mappedStack","Segment","raised","inverted","secondary","textAlign","emptyStack","Message","header","content","toUpperCase","as","Transition","Group","animation","StackCreatePresentation","modalOpen","inputName","inputType","inputSize","onModalToggle","onNameChange","onTypeChange","onSizeChange","onStackSubmit","Fragment","labelPosition","onClick","Modal","open","centered","Form","onSubmit","Input","label","circular","link","Select","negative","Or","positive","StackCreate","handleStackCreate","useState","setModalOpen","setInputName","setInputType","setInputSize","Number","StackOptions","inputDesign","handleStackPush","handleStackPop","pushInput","setPushInput","onInputChange","loading","widths","MessagesStackPresentation","messageStack","archiveStack","messageOpen","archiveOpen","onClose","onMessageOpen","onArchiveOpen","onMessageArchive","floated","basic","pointing","scrolling","Description","Actions","primary","MessageStack","collectedMessages","archivedMessages","handleMessageArchive","setMessageOpen","setArchiveOpen","renderMessages","msg","success","warning","renderCount","App","state","priorityMessages","setState","immer","draft","create","pop","console","group","groupCollapsed","log","groupEnd","React","Component","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f6b56ed.chunk.js","sourcesContent":["class Stack {\r\n\tconstructor(size = 10) {\r\n\t\tthis.stack = new Array(size).fill(null);\r\n\t\tthis.size = size;\r\n\t\tthis.top = -1;\r\n\t}\r\n\r\n\tisFull() {\r\n\t\treturn this.top === this.size - 1;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this.top === -1;\r\n\t}\r\n\r\n\tpush(value) {\r\n\t\tif (!this.isFull()) {\r\n\t\t\tthis.stack[++this.top] = value;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpop() {\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tconst value = this.stack[this.top];\r\n\t\t\tthis.stack[this.top--] = null;\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic create(prevStack) {\r\n\t\tconst newStack = new Stack();\r\n\t\tnewStack.stack = prevStack.stack;\r\n\t\tnewStack.size = prevStack.size;\r\n\t\tnewStack.top = prevStack.top;\r\n\t\treturn newStack;\r\n\t}\r\n\r\n\tget copy() {\r\n\t\treturn [...this.stack];\r\n\t}\r\n}\r\n\r\nexport default Stack;\r\n","import Stack from '../Stack';\r\n\r\nexport const initialStateStacks = [\r\n\t{\r\n\t\tname: 'Default',\r\n\t\ttype: 'string',\r\n\t\tstack: new Stack(),\r\n\t},\r\n\t{\r\n\t\tname: 'Default',\r\n\t\ttype: 'number',\r\n\t\tstack: new Stack(),\r\n\t},\r\n\t{\r\n\t\tname: 'Default',\r\n\t\ttype: 'boolean',\r\n\t\tstack: new Stack(),\r\n\t},\r\n];\r\n\r\nexport const validityChecks = new Map([\r\n\t['number', val => /^(\\d)+(.(\\d)+)?$/i.test(val)],\r\n\t['boolean', val => val === 'true' || val === 'false'],\r\n\t['string', val => typeof val === 'string' && val !== ''],\r\n]);\r\n\r\nexport const validTypes = [...validityChecks.keys()];\r\nexport const invalidStackNames = ['default'];\r\n","import { validityChecks, validTypes, invalidStackNames } from './stackConsts';\r\n\r\nexport const getType = val => {\r\n\tfor (let [type, check] of validityChecks) {\r\n\t\tif (check(val) === true) return type;\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport const isValidPush = (val, type) => {\r\n\treturn type === getType(val)\r\n\t\t? null\r\n\t\t: {\r\n\t\t\t\thead: `Invalid Input of Type < ${type} >`,\r\n\t\t\t\tbody: `Element to push should be a < ${type} >`,\r\n\t\t\t\terror: true,\r\n\t\t  };\r\n};\r\n\r\nexport const isValidStackConfig = (name, type, size) => {\r\n\tconst errors = [];\r\n\tif (name.length <= 0 || name.length > 20) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invalid Size for a Name',\r\n\t\t\tbody: 'Enter a Valid Name that has a length <= 20',\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (invalidStackNames.includes(name.toLowerCase())) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invalid Name for a Stack',\r\n\t\t\tbody: `Entered Name \"${name}\" is Invalid`,\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (getType(name) !== 'string') {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invalid Name Type for a Stack',\r\n\t\t\tbody: `Entered Name is of Type < ${getType(name)} >`,\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (!validTypes.includes(type)) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invlid Type for a Stack',\r\n\t\t\tbody: `A Stack can only have a Types [${validTypes.toString()}]`,\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (size <= 0 || size > 20) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invlid Size for a Stack',\r\n\t\t\tbody: 'Enter a Valid Size that has a length <= 20',\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\tif (Math.floor(size) !== Math.ceil(size)) {\r\n\t\terrors.push({\r\n\t\t\thead: 'Invalid Size of a Floating Number',\r\n\t\t\tbody: 'Enter a Valid Size which is of Type < integer >',\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\r\n\treturn errors;\r\n};\r\n","export * from './stackConsts';\r\nexport * from './stackValidation';\r\n\r\nexport const getIcon = type => {\r\n\tswitch (type) {\r\n\t\tcase 'number':\r\n\t\t\treturn 'sort numeric up';\r\n\t\tcase 'string':\r\n\t\t\treturn 'sort alphabet up';\r\n\t\tcase 'boolean':\r\n\t\t\treturn 'sort';\r\n\t\tdefault:\r\n\t\t\treturn 'delete';\r\n\t}\r\n};\r\n\r\nexport const getColor = type => {\r\n\tswitch (type) {\r\n\t\tcase 'number':\r\n\t\t\treturn 'orange';\r\n\t\tcase 'string':\r\n\t\t\treturn 'green';\r\n\t\tcase 'boolean':\r\n\t\t\treturn 'blue';\r\n\t\tdefault:\r\n\t\t\treturn 'red';\r\n\t}\r\n};\r\n","import styled from 'styled-components';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nexport const background = `#c1b8c1`;\r\nexport const backgroundHover = `#c6bec7`;\r\n\r\nexport const outsetShadow = `13px 13px 35px #9c959c, -13px -13px 35px #e6dbe6`;\r\nexport const insetShadow = `inset 13px 13px 35px #9c959c, inset -13px -13px 35px #e6dbe6`;\r\n\r\nexport const outsetShadowIntense = `5px 5px 21px #615c61, -5px -5px 21px #ffffff`;\r\nexport const insetShadowIntense = `inset 5px 5px 21px #615c61, inset -5px -5px 21px #ffffff`;\r\n\r\nexport const ScrollDiv = styled('div')`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\r\n\tbackground: ${background};\r\n\tbox-shadow: ${props => (props.outset ? outsetShadow : insetShadow)};\r\n\r\n\toverflow-y: ${props => (props.noScroll ? 'visible' : 'scroll')};\r\n\tpadding: ${props => (props.padding ? props.padding * 100 : 3)}%;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n\tcolor: black !important;\r\n\tbackground: ${background} !important;\r\n\tbox-shadow: ${outsetShadowIntense} !important;\r\n\r\n\t&:hover {\r\n\t\tbackground: ${backgroundHover} !important;\r\n\t}\r\n\r\n\t&:active {\r\n\t\tbox-shadow: ${insetShadowIntense} !important;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { background } from '../../services/StyledComponents';\r\n\r\nexport const Grid = styled('div')`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${background};\r\n\tpadding: 1%;\r\n\tdisplay: grid;\r\n\tgrid-template-rows: repeat(10, 1fr);\r\n\tgrid-template-columns: repeat(10, 1fr);\r\n\tgrid-gap: 1.5%;\r\n\tgrid-template-areas:\r\n\t\t'a a a a a d d d d d'\r\n\t\t'a a a a a d d d d d'\r\n\t\t'1 1 1 1 1 1 c c c c'\r\n\t\t'b b b b b b c c c c'\r\n\t\t'b b b b b b c c c c'\r\n\t\t'b b b b b b c c c c'\r\n\t\t'2 2 2 2 2 2 c c c c'\r\n\t\t'e e e e e e c c c c'\r\n\t\t'e e e e e e c c c c'\r\n\t\t'3 3 3 3 3 3 3 3 3 3';\r\n\r\n\t@media (max-width: 800px) {\r\n\t\theight: 250%;\r\n\t\tbackground-size: 100% 250%;\r\n\t\tpadding: 0%;\r\n\t\tgrid-template-rows: repeat(14, 1fr);\r\n\t\tgrid-template-columns: repeat(1, 1fr);\r\n\t\tgrid-gap: 0%;\r\n\t\tgrid-template-areas:\r\n\t\t\t'a'\r\n\t\t\t'1'\r\n\t\t\t'c'\r\n\t\t\t'c'\r\n\t\t\t'c'\r\n\t\t\t'c'\r\n\t\t\t'2'\r\n\t\t\t'd'\r\n\t\t\t'3'\r\n\t\t\t'b'\r\n\t\t\t'b'\r\n\t\t\t'4'\r\n\t\t\t'e'\r\n\t\t\t'5';\r\n\t}\r\n`;\r\nexport const GridItem = styled('div')`\r\n\tgrid-area: ${({ area }) => area};\r\n`;\r\n","import React from 'react';\r\nimport { Dropdown, Header, Icon } from 'semantic-ui-react';\r\n\r\nimport { getIcon } from '../services/stackServices';\r\nimport { ScrollDiv } from '../services/StyledComponents';\r\n\r\nconst StacksMenu = ({ stackCollection, handleStackChange, stackPos }) => {\r\n\tconst dropdownOptions = stackCollection.map((stack, index) => {\r\n\t\tconst icon = getIcon(stack.type);\r\n\r\n\t\treturn {\r\n\t\t\tkey: index,\r\n\t\t\tvalue: index,\r\n\t\t\ttext: `${stack.name} < ${stack.type} >`,\r\n\t\t\ticon: icon,\r\n\t\t};\r\n\t});\r\n\r\n\tconst onStackChange = (_, { value }) => {\r\n\t\thandleStackChange(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ScrollDiv noScroll outset>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='outdent' />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tChoose a Stack\r\n\t\t\t\t\t<Header.Subheader>Choose one out of the following Stacks</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<Dropdown\r\n\t\t\t\tvalue={stackPos}\r\n\t\t\t\tplaceholder='Select a Stack'\r\n\t\t\t\tfluid\r\n\t\t\t\tselection\r\n\t\t\t\toptions={dropdownOptions}\r\n\t\t\t\tonChange={onStackChange}\r\n\t\t\t/>\r\n\t\t</ScrollDiv>\r\n\t);\r\n};\r\n\r\nexport default StacksMenu;\r\n","import React from 'react';\r\nimport { Segment, Message, Header, Icon, Transition } from 'semantic-ui-react';\r\n\r\nimport { getIcon, getColor } from '../services/stackServices';\r\nimport { ScrollDiv } from '../services/StyledComponents';\r\n\r\nconst VisualStack = ({ currentStack }) => {\r\n\tconst icon = getIcon(currentStack.type);\r\n\tconst color = getColor(currentStack.type);\r\n\r\n\tconst stack = currentStack.stack.copy.filter(el => el !== null).reverse();\r\n\tconst mappedStack = stack.map((el, index) => {\r\n\t\treturn (\r\n\t\t\t<Segment\r\n\t\t\t\tkey={stack.length - index}\r\n\t\t\t\traised\r\n\t\t\t\tinverted\r\n\t\t\t\tsecondary\r\n\t\t\t\tcolor={color}\r\n\t\t\t\ttextAlign='center'\r\n\t\t\t>\r\n\t\t\t\t{el ? el : 'null'}\r\n\t\t\t</Segment>\r\n\t\t);\r\n\t});\r\n\tconst emptyStack = (\r\n\t\t<Message\r\n\t\t\terror\r\n\t\t\tsize='small'\r\n\t\t\theader='Empty Stack'\r\n\t\t\tcontent={`${currentStack.name.toUpperCase()} Stack is empty .`}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ScrollDiv>\r\n\t\t\t<Header as='h2' color={color}>\r\n\t\t\t\t<Icon name={icon} />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\t{currentStack.name.toUpperCase()} Stack\r\n\t\t\t\t\t<Header.Subheader>Type : {currentStack.type}</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<Transition.Group animation='scale'>\r\n\t\t\t\t{stack.length > 0 ? mappedStack : emptyStack}\r\n\t\t\t</Transition.Group>\r\n\t\t</ScrollDiv>\r\n\t);\r\n};\r\n\r\nexport default VisualStack;\r\n","import React from 'react';\r\nimport { Icon, Button, Form, Modal, Header } from 'semantic-ui-react';\r\n\r\nimport { StyledButton, ScrollDiv } from '../../services/StyledComponents';\r\n\r\nconst StackCreatePresentation = ({\r\n\ticon,\r\n\tcolor,\r\n\toptions,\r\n\tmodalOpen,\r\n\tinputName,\r\n\tinputType,\r\n\tinputSize,\r\n\tonModalToggle,\r\n\tonNameChange,\r\n\tonTypeChange,\r\n\tonSizeChange,\r\n\tonStackSubmit,\r\n}) => (\r\n\t<React.Fragment>\r\n\t\t<ScrollDiv noScroll>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='paper plane' />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tCreate a New Stack\r\n\t\t\t\t\t<Header.Subheader>Initialise an Empty Stack with a Name</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<StyledButton icon fluid labelPosition='right' onClick={onModalToggle}>\r\n\t\t\t\t<Icon name='upload' />\r\n\t\t\t\tCreate an Empty Stack\r\n\t\t\t</StyledButton>\r\n\t\t</ScrollDiv>\r\n\t\t<Modal open={modalOpen} centered={false}>\r\n\t\t\t<Modal.Header>Stack Creation Form</Modal.Header>\r\n\t\t\t<Modal.Content>\r\n\t\t\t\t<Form onSubmit={onStackSubmit}>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={inputName}\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tlabel='Stack Name'\r\n\t\t\t\t\t\tplaceholder='Enter a Stack Name ...'\r\n\t\t\t\t\t\ticon={<Icon name={icon} color={color} inverted circular link />}\r\n\t\t\t\t\t\tonChange={onNameChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={inputSize}\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tlabel='Stack Size'\r\n\t\t\t\t\t\tplaceholder='Enter the Size of Stack ...'\r\n\t\t\t\t\t\tonChange={onSizeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Select value={inputType} options={options} onChange={onTypeChange} />\r\n\t\t\t\t\t<Button.Group fluid>\r\n\t\t\t\t\t\t<Button type='button' negative onClick={onModalToggle}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button.Or />\r\n\t\t\t\t\t\t<Button type='submit' positive>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Button.Group>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Content>\r\n\t\t</Modal>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default StackCreatePresentation;\r\n","import React, { useState } from 'react';\r\n\r\nimport { getIcon, getColor, validTypes } from '../../services/stackServices';\r\n\r\nimport StackCreatePresentation from './StackCreate.present';\r\n\r\nconst StackCreate = ({ handleStackCreate }) => {\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [inputName, setInputName] = useState('');\r\n\tconst [inputType, setInputType] = useState(0);\r\n\tconst [inputSize, setInputSize] = useState(5);\r\n\r\n\tconst icon = getIcon(validTypes[inputType]);\r\n\tconst color = getColor(validTypes[inputType]);\r\n\tconst options = validTypes.map((type, index) => ({\r\n\t\tkey: index,\r\n\t\tvalue: index,\r\n\t\ttext: type.toUpperCase(),\r\n\t}));\r\n\r\n\tconst onModalToggle = () => {\r\n\t\tsetModalOpen(!modalOpen);\r\n\t};\r\n\r\n\tconst onNameChange = (_, { value }) => {\r\n\t\tsetInputName(value);\r\n\t};\r\n\r\n\tconst onTypeChange = (_, { value }) => {\r\n\t\tsetInputType(value);\r\n\t};\r\n\r\n\tconst onSizeChange = (_, { value }) => {\r\n\t\tsetInputSize(Number(value));\r\n\t};\r\n\r\n\tconst onStackSubmit = () => {\r\n\t\thandleStackCreate(inputName, validTypes[inputType], inputSize);\r\n\t\tsetModalOpen(false);\r\n\t\tsetInputName('');\r\n\t\tsetInputType(0);\r\n\t\tsetInputSize(5);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StackCreatePresentation\r\n\t\t\ticon={icon}\r\n\t\t\tcolor={color}\r\n\t\t\toptions={options}\r\n\t\t\tmodalOpen={modalOpen}\r\n\t\t\tinputName={inputName}\r\n\t\t\tinputType={inputType}\r\n\t\t\tinputSize={inputSize}\r\n\t\t\tonModalToggle={onModalToggle}\r\n\t\t\tonNameChange={onNameChange}\r\n\t\t\tonTypeChange={onTypeChange}\r\n\t\t\tonSizeChange={onSizeChange}\r\n\t\t\tonStackSubmit={onStackSubmit}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default StackCreate;\r\n","import React, { useState } from 'react';\r\nimport { Form, Icon, Header } from 'semantic-ui-react';\r\n\r\nimport { StyledButton, ScrollDiv } from '../services/StyledComponents';\r\n\r\nconst StackOptions = ({ currentStack, handleStackPush, handleStackPop }) => {\r\n\tconst [pushInput, setPushInput] = useState('');\r\n\r\n\tconst onInputChange = (_, { value }) => {\r\n\t\tsetPushInput(value);\r\n\t};\r\n\r\n\tconst onStackPush = () => {\r\n\t\thandleStackPush(pushInput);\r\n\t\tsetPushInput('');\r\n\t};\r\n\r\n\tconst onStackPop = () => {\r\n\t\thandleStackPop();\r\n\t\tsetPushInput('');\r\n\t};\r\n\r\n\tlet inputDesign;\r\n\tif (currentStack.type === 'boolean')\r\n\t\tinputDesign = (\r\n\t\t\t<Form.Select\r\n\t\t\t\tfluid\r\n\t\t\t\tvalue={pushInput}\r\n\t\t\t\tplaceholder='Choosea Boolean Value'\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ key: 0, text: 'TRUE', value: 'true' },\r\n\t\t\t\t\t{ key: 1, text: 'FALSE', value: 'false' },\r\n\t\t\t\t]}\r\n\t\t\t\tonChange={onInputChange}\r\n\t\t\t/>\r\n\t\t);\r\n\telse {\r\n\t\tinputDesign = (\r\n\t\t\t<Form.Input\r\n\t\t\t\tfluid\r\n\t\t\t\tvalue={pushInput}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Enter an element ...'\r\n\t\t\t\tonChange={onInputChange}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ScrollDiv noScroll outset>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='cog' loading />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tStack Operations\r\n\t\t\t\t\t<Header.Subheader>\r\n\t\t\t\t\t\tApply Push or Pop Operations on the Current Stack\r\n\t\t\t\t\t</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<Form>\r\n\t\t\t\t<Form.Group widths='equal'>{inputDesign}</Form.Group>\r\n\t\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\tlabelPosition='right'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={onStackPop}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Icon name='angle double down' />\r\n\t\t\t\t\t\tPop\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\tlabelPosition='right'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={onStackPush}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Icon name='angle double up' />\r\n\t\t\t\t\t\tPush\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</ScrollDiv>\r\n\t);\r\n};\r\n\r\nexport default StackOptions;\r\n","import React from 'react';\r\nimport { Header, Modal, Button, Icon } from 'semantic-ui-react';\r\n\r\nimport { StyledButton, ScrollDiv } from '../../services/StyledComponents';\r\n\r\nconst MessagesStackPresentation = ({\r\n\tmessageStack,\r\n\tarchiveStack,\r\n\temptyStack,\r\n\tmessageOpen,\r\n\tarchiveOpen,\r\n\tonClose,\r\n\tonMessageOpen,\r\n\tonArchiveOpen,\r\n\tonMessageArchive,\r\n}) => (\r\n\t<React.Fragment>\r\n\t\t<ScrollDiv noScroll outset>\r\n\t\t\t<Header size='small'>\r\n\t\t\t\t<Icon name='settings' />\r\n\t\t\t\t<Header.Content>\r\n\t\t\t\t\tMessages\r\n\t\t\t\t\t<Header.Subheader>Checkout Messages collected</Header.Subheader>\r\n\t\t\t\t</Header.Content>\r\n\t\t\t</Header>\r\n\t\t\t<StyledButton\r\n\t\t\t\tfloated='right'\r\n\t\t\t\ticon='fork'\r\n\t\t\t\tcontent='Current Messages'\r\n\t\t\t\tlabel={{\r\n\t\t\t\t\tbasic: false,\r\n\t\t\t\t\tcolor: 'grey',\r\n\t\t\t\t\tpointing: 'left',\r\n\t\t\t\t\tcontent: messageStack.length,\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onMessageOpen}\r\n\t\t\t/>\r\n\t\t</ScrollDiv>\r\n\r\n\t\t<Modal open={messageOpen} centered={false}>\r\n\t\t\t<Modal.Header>Current Messages Collected</Modal.Header>\r\n\t\t\t<Modal.Content scrolling>\r\n\t\t\t\t<Modal.Description>\r\n\t\t\t\t\t<Header floated='right' size='small'>\r\n\t\t\t\t\t\tCheck out all the Current Messages\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t{messageStack.length > 0 ? messageStack : emptyStack}\r\n\t\t\t\t</Modal.Description>\r\n\t\t\t</Modal.Content>\r\n\t\t\t<Modal.Actions>\r\n\t\t\t\t<Button icon primary labelPosition='right' onClick={onMessageArchive}>\r\n\t\t\t\t\t<Icon name='chevron right' />\r\n\t\t\t\t\tArchive all the messages\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button icon positive labelPosition='right' onClick={onArchiveOpen}>\r\n\t\t\t\t\t<Icon name='inbox' />\r\n\t\t\t\t\tOpen Archived Messages\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button icon negative labelPosition='right' onClick={onClose}>\r\n\t\t\t\t\t<Icon name='close' />\r\n\t\t\t\t\tClose Messages\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Actions>\r\n\t\t</Modal>\r\n\r\n\t\t<Modal open={archiveOpen} centered={false}>\r\n\t\t\t<Modal.Header>Current Messages Archived</Modal.Header>\r\n\t\t\t<Modal.Content scrolling>\r\n\t\t\t\t<Modal.Description>\r\n\t\t\t\t\t<Header floated='right' size='small'>\r\n\t\t\t\t\t\tCheck out all the Archived Messages\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t{archiveStack.length > 0 ? archiveStack : emptyStack}\r\n\t\t\t\t</Modal.Description>\r\n\t\t\t</Modal.Content>\r\n\t\t\t<Modal.Actions>\r\n\t\t\t\t<Button icon negative labelPosition='right' onClick={onClose}>\r\n\t\t\t\t\t<Icon name='close' />\r\n\t\t\t\t\tClose Messages\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Actions>\r\n\t\t</Modal>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default MessagesStackPresentation;\r\n","import React, { useState } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nimport MessagesStackPresentation from './MessagesStack.present';\r\n\r\nconst MessageStack = ({\r\n\tcollectedMessages,\r\n\tarchivedMessages,\r\n\thandleMessageArchive,\r\n}) => {\r\n\tconst [messageOpen, setMessageOpen] = useState(false);\r\n\tconst [archiveOpen, setArchiveOpen] = useState(false);\r\n\r\n\tconst onClose = () => {\r\n\t\tsetMessageOpen(false);\r\n\t\tsetArchiveOpen(false);\r\n\t};\r\n\r\n\tconst onMessageOpen = () => {\r\n\t\tsetMessageOpen(true);\r\n\t\tsetArchiveOpen(false);\r\n\t};\r\n\r\n\tconst onArchiveOpen = () => {\r\n\t\tsetMessageOpen(false);\r\n\t\tsetArchiveOpen(true);\r\n\t};\r\n\r\n\tconst onMessageArchive = () => {\r\n\t\thandleMessageArchive();\r\n\t};\r\n\r\n\tconst renderMessages = stack =>\r\n\t\tstack.map((msg, index) => (\r\n\t\t\t<Message\r\n\t\t\t\tkey={index}\r\n\t\t\t\terror={msg.error === true}\r\n\t\t\t\tsuccess={msg.error !== true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\ticon={msg.error === true ? 'question' : 'star'}\r\n\t\t\t\theader={msg.head}\r\n\t\t\t\tcontent={msg.body}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\tconst messageStack = renderMessages(collectedMessages);\r\n\tconst archiveStack = renderMessages(archivedMessages);\r\n\tconst emptyStack = (\r\n\t\t<Message\r\n\t\t\twarning\r\n\t\t\ticon='inbox'\r\n\t\t\tsize='small'\r\n\t\t\theader='No Messages Found'\r\n\t\t\tcontent='No new Messages are found'\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<MessagesStackPresentation\r\n\t\t\tmessageStack={messageStack}\r\n\t\t\tarchiveStack={archiveStack}\r\n\t\t\temptyStack={emptyStack}\r\n\t\t\tmessageOpen={messageOpen}\r\n\t\t\tarchiveOpen={archiveOpen}\r\n\t\t\tonClose={onClose}\r\n\t\t\tonMessageOpen={onMessageOpen}\r\n\t\t\tonArchiveOpen={onArchiveOpen}\r\n\t\t\tonMessageArchive={onMessageArchive}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default MessageStack;\r\n","import React from 'react';\nimport immer from 'immer';\n\nimport Stack from '../../services/Stack';\nimport {\n\tisValidStackConfig,\n\tisValidPush,\n\tinitialStateStacks,\n} from '../../services/stackServices';\n\nimport { Grid, GridItem } from './styles';\nimport StackMenu from '../StacksMenu';\nimport VisualStack from '../VisualStack';\nimport StackCreate from '../StackCreate';\nimport StackOptions from '../StackOptions';\nimport MessageStack from '../MessagesStack';\n\nlet renderCount = 0;\nclass App extends React.Component {\n\tstate = {\n\t\tstackPos: 0,\n\t\tpriorityMessages: [],\n\t\tcollectedMessages: [],\n\t\tarchivedMessages: [],\n\t\tstackCollection: initialStateStacks,\n\t};\n\n\tcomponentDidUpdate() {\n\t\tconsole.group('Render Number :\\t', ++renderCount);\n\n\t\tconsole.groupCollapsed('Current Stack Config ...');\n\t\tconsole.log('Current Position :');\n\t\tconsole.log(this.state.stackPos);\n\t\tconsole.log('Current Stack :');\n\t\tconsole.log(this.state.stackCollection[this.state.stackPos]);\n\t\tconsole.groupEnd();\n\n\t\tconsole.groupCollapsed('Current Messages ...');\n\t\tconsole.log('Collected Messages :');\n\t\tconsole.log(this.state.collectedMessages);\n\t\tconsole.log('Archived Messages :');\n\t\tconsole.log(this.state.archivedMessages);\n\t\tconsole.log('Priority Message :');\n\t\tconsole.log(this.state.priorityMessages);\n\t\tconsole.groupEnd();\n\n\t\tconsole.groupEnd();\n\t}\n\n\thandleStackChange = index => {\n\t\tthis.setState(\n\t\t\timmer(draft => {\n\t\t\t\tdraft.stackPos = index;\n\t\t\t})\n\t\t);\n\t};\n\n\thandleStackCreate = (name, type, size) => {\n\t\tconst errors = isValidStackConfig(name, type, size);\n\t\tif (errors.length > 0) {\n\t\t\tthis.setState(\n\t\t\t\timmer(draft => {\n\t\t\t\t\tdraft.collectedMessages.push(...errors);\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setState(\n\t\t\t\timmer(draft => {\n\t\t\t\t\tdraft.stackCollection.push({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tstack: new Stack(size),\n\t\t\t\t\t});\n\t\t\t\t\tdraft.collectedMessages.push({\n\t\t\t\t\t\thead: 'Stack Created Successfully',\n\t\t\t\t\t\tbody: `Created Stack ${name.toUpperCase()} of Type < ${type} >`,\n\t\t\t\t\t\terror: false,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n\n\thandleStackPush = value => {\n\t\tconst currentStack = this.state.stackCollection[this.state.stackPos];\n\t\tconst error = isValidPush(value, currentStack.type);\n\t\tif (error !== null) {\n\t\t\tthis.setState(\n\t\t\t\timmer(draft => {\n\t\t\t\t\tdraft.collectedMessages.push(error);\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tconst newStack = Stack.create(currentStack.stack);\n\t\t\tif (newStack.push(value) === false) {\n\t\t\t\tthis.setState(\n\t\t\t\t\timmer(draft => {\n\t\t\t\t\t\tdraft.collectedMessages.push({\n\t\t\t\t\t\t\thead: 'Stack is Full',\n\t\t\t\t\t\t\tbody: 'Cannot Push any more elements.',\n\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.setState(\n\t\t\t\t\timmer(draft => {\n\t\t\t\t\t\tdraft.stackCollection[draft.stackPos].stack = newStack;\n\t\t\t\t\t\tdraft.collectedMessages.push({\n\t\t\t\t\t\t\thead: 'Element Pushed Successfully',\n\t\t\t\t\t\t\tbody: `Pushed element : ${value}`,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\thandleStackPop = () => {\n\t\tconst currentStack = this.state.stackCollection[this.state.stackPos];\n\t\tconst newStack = Stack.create(currentStack.stack);\n\t\tconst value = newStack.pop();\n\t\tif (value === null) {\n\t\t\tthis.setState(\n\t\t\t\timmer(draft => {\n\t\t\t\t\tdraft.collectedMessages.push({\n\t\t\t\t\t\thead: 'Stack is Empty',\n\t\t\t\t\t\tbody: 'Cannot Pop any more elements.',\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setState(\n\t\t\t\timmer(draft => {\n\t\t\t\t\tdraft.stackCollection[draft.stackPos].stack = newStack;\n\t\t\t\t\tdraft.collectedMessages.push({\n\t\t\t\t\t\thead: 'Element Popped Successfully',\n\t\t\t\t\t\tbody: `Popped element : ${value}`,\n\t\t\t\t\t\terror: false,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n\n\thandleMessageArchive = () => {\n\t\tthis.setState(\n\t\t\timmer(draft => {\n\t\t\t\tdraft.archivedMessages.push(...draft.collectedMessages);\n\t\t\t\tdraft.collectedMessages = [];\n\t\t\t})\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Grid>\n\t\t\t\t<GridItem area='a'>\n\t\t\t\t\t<StackMenu\n\t\t\t\t\t\tstackPos={this.state.stackPos}\n\t\t\t\t\t\tstackCollection={this.state.stackCollection}\n\t\t\t\t\t\thandleStackChange={this.handleStackChange}\n\t\t\t\t\t/>\n\t\t\t\t</GridItem>\n\t\t\t\t<GridItem area='b'>\n\t\t\t\t\t<StackOptions\n\t\t\t\t\t\tcurrentStack={this.state.stackCollection[this.state.stackPos]}\n\t\t\t\t\t\thandleStackPush={this.handleStackPush}\n\t\t\t\t\t\thandleStackPop={this.handleStackPop}\n\t\t\t\t\t/>\n\t\t\t\t</GridItem>\n\t\t\t\t<GridItem area='c'>\n\t\t\t\t\t<VisualStack\n\t\t\t\t\t\tcurrentStack={this.state.stackCollection[this.state.stackPos]}\n\t\t\t\t\t/>\n\t\t\t\t</GridItem>\n\t\t\t\t<GridItem area='d'>\n\t\t\t\t\t<StackCreate handleStackCreate={this.handleStackCreate} />\n\t\t\t\t</GridItem>\n\t\t\t\t<GridItem area='e'>\n\t\t\t\t\t<MessageStack\n\t\t\t\t\t\tcollectedMessages={this.state.collectedMessages}\n\t\t\t\t\t\tarchivedMessages={this.state.archivedMessages}\n\t\t\t\t\t\thandleMessageArchive={this.handleMessageArchive}\n\t\t\t\t\t/>\n\t\t\t\t</GridItem>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './components/App';\n\nconst GlobalStyle = createGlobalStyle`\n   * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n   }\n\n   body {\n      width: 100vw;\n      height: 100vh;\n   }\n\n   #root {\n      width: 100%;\n      height: 100%;\n   }\n`;\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.Fragment>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}